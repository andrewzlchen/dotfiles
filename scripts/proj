#!/bin/bash

################################################################################
#                                     proj                                     #
#  proj is a script that allows you to set up git projects within your command #                                   
#  prompt. This script takes inspiration from VSCode's Project Manager plugin  #
#  Currently, it assumes that vim/nvim is the set $EDITOR of and the fzf       #
#  plugin is installed.                                                        #
################################################################################

# Set this var to configure what file to store your projects in
PROJECTS_FILE=$HOME/.projects

# Given a single argument, delete the lines from the projects file that match 
# the input exactly
delete_line_strict() {
    ESCAPED=$(echo $1 | sed -e 's/[\/&]/\\&/g')
    CMD_STR="/^$ESCAPED$/d"
    sed -i '' $CMD_STR $PROJECTS_FILE
}

# main {{
if [[ $1 = "add" ]]; then
    # add project to projects file
    CWD=$(pwd)

    delete_line_strict $CWD
    echo $CWD >> $PROJECTS_FILE
elif [[ $1 = "rm" ]]; then
    # Remove current dir from projects file
    CWD=$(pwd)

    delete_line_strict $CWD
elif [[ $1 = "ls" ]]; then
    # list all registered projects
    echo "Your currently defined projects:"
    echo
    cat $PROJECTS_FILE
else
    # edit projects
    PROJ=$(cat $PROJECTS_FILE | fzf)
    if [[ ! -z $PROJ && -d $PROJ ]]; then
        cd $PROJ 
        $EDITOR "+Files"
    fi
fi
# }}
